nrow(data)
nrow(data) + nrow(otherdata)
nulldata <- droplevels(subset(target, (Convergence %in% c("!!!"))))
nrow(nulldata)
nulldata <- droplevels(subset(target, (Convergence %in% c("0"))))
nrow(nulldata)
nulldata <- droplevels(subset(target, (Convergence %in% c(""))))
nrow(nulldata)
pronounsdata <- droplevels(subset(target, (Convergence %in% c("pronoun", "0"))))
nrow(pronounsdata)
pronounsdata <- droplevels(subset(target, (Convergence %in% c("pronoun", "0", ""))))
nrow(pronounsdata)
levels(data$Verb)
data$Verb <- recode(data$Verb, "'do|does|doing|did|didnt|done|doesnt'='do'");
data$Verb <- recode(data$Verb, "'get|gets|got|gotten|getting'='get'");
data$Verb <- recode(data$Verb, "'give|gives|given|gived|giving|gave'='give'");
data$Verb <- recode(data$Verb, "'have|haves|having|had|havent'='have'");
data$Verb <- recode(data$Verb, "'make|makes|making|maked'='make'")
str(data)
summary(data)
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
barplot(prop.table(type.table, margin=2) * 100,
xlab="Verb",ylab="Type of Syntactic Object (%)",
legend.text=c("event","object"),
col = ("blue", "green"))
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
barplot(prop.table(type.table, margin=2) * 100,
xlab="Verb",ylab="Type of Syntactic Object (%)",
legend.text=c("event","object"),
col=c('blue', 'green'))
barplot(prop.table(type.table, margin=2) * 100,
xlab="Verb",ylab="Type of Syntactic Object (%)",
legend.text=c("event","object"))
barplot(prop.table(type.table, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
prop.table(type.table)
barplot(prop.table(type.table, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
type.by.verb <- xtabs(~ Convergence + Verb, data)
type.by.verb
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.table, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)")
mytable <- table(data$Convergence)
lbls <- paste(names(mytable), "\n", mytable, sep="")
pie(mytable, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
pie(mytable, labels = lbls)
mytable <- prop.table(data$Convergence)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", mytable, sep="")
pie(mytable, labels = lbls)
lbls <- paste(names(mytable), "\n", mytable*100, sep="")
pie(mytable, labels = lbls)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", mytable*100, sep="")
pie(mytable, labels = lbls)
library('scales')
lbls <- paste(names(mytable), "\n", percent(mytable, sep="")
pie(mytable, labels = lbls)
type.by.verb <- xtabs(~ Convergence + Verb, data)
type.by.verb
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
####factor in age####
head(data$Year)
data$Year <- sapply(strsplit(as.character(data$Age),'P'), "[", 2);
data$Year <- sapply(strsplit(as.character(data$Year),'M'), "[", 1);
data$Year <- as.factor(gsub("Y", ".", data$Year))
str(data)
age.table <- xtabs(~ Convergence + Year, data)
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
age.table <- xtabs(~ Convergence + Year, data=subset(data, Verb=="do"))
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", percent(mytable), sep="")
pie(mytable, labels = lbls)
pie(percent(mytable), labels = lbls)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", mytable, digits=2, sep="")
pie(mytable, labels = lbls)
mytable <- prop.table(type.table,digits=2)
mytable[] <- sprintf("%.1f%%",prop.table(type.table,1)*100)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(mytable, labels = lbls)
prop.table(type.table)
mytable[] <- sprintf("%.1f%%",prop.table(type.table,1)*100)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(mytable, labels = lbls)
mytable[] <- sprintf("%.1f%%",type.table*100)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(mytable, labels = lbls)
prop.table(type.table)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(mytable, labels = lbls)
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(mytable, labels = lbls)
## user input before running anew
library(car)
library('scales')
setwd("~/GitHub/brown_LVCs/raw data")
# read in the target data, with duplicates removed
target <- read.csv("merged.csv")
nrow(target)
head(target)
myvars <- c("Name", "Verb", "Age", "Convergence")
data <- target[myvars]
head(data)
pronounsdata <- droplevels(subset(target, (Convergence %in% c("pronoun", "0", ""))))
nrow(pronounsdata)
otherdata <- droplevels(subset(target, (!Convergence %in% c("object","event", "object "))))
nrow(otherdata)
nulldata <- droplevels(subset(target, (Convergence %in% c(""))))
nrow(nulldata)
#use only unambiguous events and objects
levels(data$Convergence)
data <- droplevels(subset(data, !(Convergence %in% c("","!!!","0", "pronoun"))))
data$Convergence <- recode(data$Convergence, "'object '='object'")
nrow(data)
nrow(data) + nrow(otherdata)
#recode verbs
levels(data$Verb)
data$Verb <- recode(data$Verb, "'do|does|doing|did|didnt|done|doesnt'='do'");
data$Verb <- recode(data$Verb, "'get|gets|got|gotten|getting'='get'");
data$Verb <- recode(data$Verb, "'give|gives|given|gived|giving|gave'='give'");
data$Verb <- recode(data$Verb, "'have|haves|having|had|havent'='have'");
data$Verb <- recode(data$Verb, "'make|makes|making|maked'='make'")
str(data)
summary(data)
type.table <- xtabs(~ Convergence, data)
mytable[] <- sprintf("%.1f%%",prop.table(type.table,1)*100)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(mytable, labels = lbls)
type.table <- xtabs(~ Convergence, data)
mytable[] <- sprintf("%.1f%%",prop.table(type.table,1)*100)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(mytable, labels = lbls)
pie(type.table, labels = lbls)
type.table <- xtabs(~ Convergence, data)
pie(type.table, labels = lbls)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(type.table, labels = lbls)
type.table
prop.table(type.table)
pie(type.table, labels = lbls)
pie(prop.table(type.table), labels = lbls)
pie(prop.table(type.table), labels = lbls)
prop.table(type.table)
mytable[] <- sprintf("%.1f%%",type.table*100)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(prop.table(type.table), labels = lbls)
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
mytable[] <- sprintf("%.1f%%",type.table*100)
lbls <- paste(names(mytable), "\n", mytable,  sep="")
pie(prop.table(type.table), labels = lbls)
mytable
mytable[] <- sprintf("%.1f%%",type.table)
mytable
mytable[] <- sprintf("%.1f%%",type.table/100)
mytable
type.table <- xtabs(~ Convergence, data)
mytable <- prop.table(type.table)
mytable
mytable[] <- sprintf("%.1f%%",mytable)
mytable
mytable[] <- sprintf("%.1f%%",mytable*100)
mytable[] <- sprintf("%.1f%%",prop.table(type.table,1)*100)
mytable
mytable[] <- sprintf("%.1f%%",prop.table(type.table,2)*100)
type.table <- xtabs(~ Convergence, data)
type.table
mytable[] <- sprintf("%.1f%%",prop.table(type.table,1)*100)
mytable
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
lbls <- paste(names(sprintf("%.1f%%",round(type.table, 3)), "\n", mytable,  sep="")
pie(prop.table(type.table), labels = lbls)
type.by.verb <- xtabs(~ Convergence + Verb, data)
type.by.verb
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
####factor in age####
head(data$Year)
data$Year <- sapply(strsplit(as.character(data$Age),'P'), "[", 2);
data$Year <- sapply(strsplit(as.character(data$Year),'M'), "[", 1);
data$Year <- as.factor(gsub("Y", ".", data$Year))
str(data)
age.table <- xtabs(~ Convergence + Year, data)
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
age.table <- xtabs(~ Convergence + Year, data=subset(data, Verb=="do"))
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
type.table <- xtabs(~ Convergence, data)
prop.table(type.table)
type.table <- prop.table(type.table)
lbls <- paste(names(sprintf("%.1f%%",round(type.table, 3))), "\n", mytable,  sep="")
pie(prop.table(type.table), labels = lbls)
type.table <- xtabs(~ Convergence, data)
mytable <- prop.table(type.table)
lbls <- paste(names(sprintf("%.1f%%",round(type.table, 3))), "\n", mytable,  sep="")
pie(prop.table(type.table), labels = lbls)
lbls <- paste(names(sprintf("%.1f%%",round(mytable, 3))), "\n", mytable,  sep="")
pie(prop.table(type.table), labels = lbls)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(type.table, 3),  sep="")
pie(prop.table(type.table), labels = lbls)
type.by.verb <- xtabs(~ Convergence + Verb, data)
type.by.verb
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
####factor in age####
head(data$Year)
data$Year <- sapply(strsplit(as.character(data$Age),'P'), "[", 2);
data$Year <- sapply(strsplit(as.character(data$Year),'M'), "[", 1);
data$Year <- as.factor(gsub("Y", ".", data$Year))
str(data)
age.table <- xtabs(~ Convergence + Year, data)
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
age.table <- xtabs(~ Convergence + Year, data=subset(data, Verb=="do"))
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(type.table, 3)),  sep="")
pie(prop.table(type.table), labels = lbls)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(prop.table(type.table), 3)),  sep="")
pie(prop.table(type.table), labels = lbls)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(prop.table(type.table)*100, 3)),  sep="")
pie(prop.table(type.table), labels = lbls)
pie(prop.table(type.table), labels = lbls, col = c('blue', 'green'))
pie(prop.table(type.table), labels = lbls, col = c('olive', 'blue'))
palette()
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'))
levels(data$Convergence)
data$Convergence <- recode(data$Convergence, "'event'='light'")
data$Convergence <- recode(data$Convergence, "'object'='non-light'")
str(data)
summary(data)
type.table <- xtabs(~ Convergence, data)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(prop.table(type.table)*100, 3)),  sep="")
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'))
png(filename="~/simplepie.png")
type.table <- xtabs(~ Convergence, data)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(prop.table(type.table)*100, 3)),  sep="")
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'))
dev.off()
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'), cex=5)
png(filename="~/GitHub/brown_LVCs/simplepie.png")
type.table <- xtabs(~ Convergence, data)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(prop.table(type.table)*100, 3)),  sep="")
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'), cex=5)
dev.off()
png(filename="~/GitHub/brown_LVCs/simplepie.png")
type.table <- xtabs(~ Convergence, data)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(prop.table(type.table)*100, 3)),  sep="")
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'), cex=3)
dev.off()
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'), cex=3,  layout(autosize = F, width = 800, height = 800, pad=3))
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'), cex=3)
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'), cex=2.5)
dev.off()
png(filename="~/GitHub/brown_LVCs/simplepie.png")
type.table <- xtabs(~ Convergence, data)
mytable <- prop.table(type.table)
lbls <- paste(names(mytable), "\n", sprintf("%.1f%%",round(prop.table(type.table)*100, 3)),  sep="")
pie(prop.table(type.table), labels = lbls, col = c('green3', 'blue'), cex=2.5)
dev.off()
type.by.verb <- xtabs(~ Convergence + Verb, data)
type.by.verb
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
png(filename="~/GitHub/brown_LVCs/pie_per_verb.png")
barplot(prop.table(type.by.verb, margin=2) * 100, , cex=2.5,xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, , cex=2.5,xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, cex=2.5,xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, cex=2.5,xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", cex=2.5,legend.text=c("event","object"))
png(filename="~/GitHub/brown_LVCs/pie_per_verb.png")
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", cex=2.5,legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
dev.off()
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, cex.axis=2.5, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, cex.axis=2.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(type.by.verb, margin=2) * 100, cex = 1.5, cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
png(filename="~/GitHub/brown_LVCs/pie_per_verb.png")
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, cex = 1.5, cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'), ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
dev.off()
data$Convergence <- recode(data$Convergence, "'event'='light'")
data$Convergence <- recode(data$Convergence, "'object'='non-light'")
type.by.verb <- xtabs(~ Convergence + Verb, data)
type.by.verb
png(filename="~/GitHub/brown_LVCs/pie_per_verb.png")
barplot(prop.table(type.by.verb, margin=2) * 100, cex = 1.5,
cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, cex = 1.5,
xlab="Verb",col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
type.by.verb <- xtabs(~ Convergence + Verb, data)
type.by.verb
png(filename="~/GitHub/brown_LVCs/pie_per_verb.png")
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, cex = 1.5,
xlab="Verb",col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, cex = 1.5,
cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
head(data$Year)
data$Year <- sapply(strsplit(as.character(data$Age),'P'), "[", 2);
data$Year <- sapply(strsplit(as.character(data$Year),'M'), "[", 1);
data$Year <- as.factor(gsub("Y", ".", data$Year))
str(data)
age.table <- xtabs(~ Convergence + Year, data)
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5,
cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
age.table <- xtabs(~ Convergence + Year, data)
age.table
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5,
cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
png(filename="~/GitHub/brown_LVCs/bar_per_verb.png")
prop.table(type.by.verb, margin=2)
barplot(prop.table(type.by.verb, margin=2) * 100, cex = 1.5,
cex.axis=1.5,cex.lab=1.5, xlab="Verb",col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png")
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png")
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("event","object"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png")
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.jpg")
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.jpg")
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"),
res=1200)
png(filename="~/GitHub/brown_LVCs/bar_per_age.jpg",res=1200)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",,width=3.25,height=3.25,units="in",res=1200)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",,width=3.25,height=3.25,units="in",res=1200)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
cex = 1.5, cex.axis=1.5,cex.lab=1.5,col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",,width=3.25,height=3.25,units="in",res=1200)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",width=3.25,height=3.25,units="in",res=1200)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green3', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",width=3.25,height=3.25,units="in",res=1200)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green2', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",width=3.25,height=3.25,units="in",res=600)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green2', 'blue'),
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
age.table <- xtabs(~ Convergence + Year, data)
age.table
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",width=3.25,height=3.25,units="in",res=600)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green2', 'blue'),
cex = 1.5, cex.axis=1.5,cex.lab=1.5,
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",res=600)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green2', 'blue'),
cex = 1.5, cex.axis=1.5,cex.lab=1.5,
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png",width=4.25,height=3.25,units="in",res=600)
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green2', 'blue'),
cex = 1.5, cex.axis=1.5,cex.lab=1.5,
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
png(filename="~/GitHub/brown_LVCs/bar_per_age.png")
barplot(prop.table(age.table, margin=2) * 100, xlab="Age",
col = c('green2', 'blue'),
cex = 1.5, cex.axis=1.5,cex.lab=1.5,
ylab="Type of Syntactic Object (%)", legend.text=c("light","non-light"))
dev.off()
library(ggplot2)
library(Rmisc)
library(lme4)
##blank out whichever isn't right :-)
#hindiRT <- read.table('/Users/ashwini/Documents/IITD/PostDoc/lightVerbExperiments/HindiLVCS/AudioPrimeLex/Processing_scripts/longform.txt',header=TRUE)
hindiRT <- read.table('/Users/evinapatata/GitHub/HindiLVCS/AudioPrimeLex/Processing_scripts/longform.txt',header=TRUE)
head(hindiRT)
with(subset(hindiRT,!is.na(rt)),tapply(rt,condition,mean))
with(subset(hindiRT,!is.na(rt)),tapply(rt,condition,sd))
plot(subset(hindiRT,!is.na(rt)&condition=='Light')$rt)
plot(subset(hindiRT,!is.na(rt)&condition=='Nonlight')$rt)
plot(subset(hindiRT,!is.na(rt)&condition=='Anomalous')$rt)
hindiRT <- subset(hindiRT$itemid!="22" & "29")
hindiRT <- subset(hindiRT$itemid!="22")
hindiRT <- subset(hindiRT, itemid!="22")
str(hindiRT)
unique(itemid)
unique(hindiRT$itemid)
hindiRT <- subset(hindiRT, itemid!="29")
unique(hindiRT$itemid)
with(subset(hindiRT,!is.na(rt)),tapply(rt,condition,mean))
with(subset(hindiRT,!is.na(rt)),tapply(rt,condition,sd))
plot(subset(hindiRT,!is.na(rt)&condition=='Light')$rt)
plot(subset(hindiRT,!is.na(rt)&condition=='Nonlight')$rt)
plot(subset(hindiRT,!is.na(rt)&condition=='Anomalous')$rt)
summary(hindiRT)
qqnorm(hindiRT$rt) #checking skewness -- looks ok, despite some outliers
hindiRT <- subset(hindiRT, hindiRT$rt <5000 & hindiRT$rt > 100)
qqnorm(hindiRT$rt) #checking skewness -- looks ok, despite some outliers
SUMMARY <- summarySE(hindiRT, measurevar="rt", groupvars=c("condition"), na.rm=TRUE)
SUMMARY
qqnorm(hindiRT$rt) #checking skewness -- looks ok, despite some outliers
full <- lm(rt ~ condition, data=hindiRT)
summary(full)
coefs <- data.frame(coef(summary(full)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
hindiRT <- subset(hindiRT, hindiRT$rt <4000 & hindiRT$rt > 100)
SUMMARY <- summarySE(hindiRT, measurevar="rt", groupvars=c("condition"), na.rm=TRUE)
SUMMARY
write.table(SUMMARY,"hindiRT_summary", col.names=NA)
full <- lm(rt ~ condition, data=hindiRT)
summary(full)
hindiRT <- subset(hindiRT, itemid!="22")
hindiRT <- subset(hindiRT, itemid!="29")
hindiRT <- subset(hindiRT, itemid!="33")
hindiRT <- subset(hindiRT, itemid!="8")
hindiRT <- subset(hindiRT, itemid!="5")
hindiRT <- subset(hindiRT, itemid!="24")
hindiRT <- subset(hindiRT, itemid!="2")
hindiRT <- subset(hindiRT, itemid!="28")
hindiRT <- subset(hindiRT, itemid!="1")
hindiRT <- subset(hindiRT, itemid!="10")
hindiRT <- subset(hindiRT, itemid!="4")
hindiRT <- subset(hindiRT, itemid!="13")
unique(hindiRT$itemid)
with(subset(hindiRT,!is.na(rt)),tapply(rt,condition,mean))
with(subset(hindiRT,!is.na(rt)),tapply(rt,condition,sd))
plot(subset(hindiRT,!is.na(rt)&condition=='Light')$rt)
plot(subset(hindiRT,!is.na(rt)&condition=='Nonlight')$rt)
plot(subset(hindiRT,!is.na(rt)&condition=='Anomalous')$rt)
summary(hindiRT)
qqnorm(hindiRT$rt) #checking skewness -- looks ok, despite some outliers
hindiRT <- subset(hindiRT, hindiRT$rt <4000 & hindiRT$rt > 100)
SUMMARY <- summarySE(hindiRT, measurevar="rt", groupvars=c("condition"), na.rm=TRUE)
SUMMARY
write.table(SUMMARY,"hindiRT_summary", col.names=NA)
full <- lm(rt ~ condition, data=hindiRT)
summary(full)
